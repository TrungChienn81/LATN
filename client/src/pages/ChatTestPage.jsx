import React, { useState } from 'react';
import {
  Container,
  Typography,
  Box,
  Grid,
  Card,
  CardContent,
  Button,
  Alert,
  Paper,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Divider
} from '@mui/material';
import {
  SmartToy as BotIcon,
  Chat as ChatIcon,
  Psychology as AIIcon,
  Search as SearchIcon,
  Recommend as RecommendIcon
} from '@mui/icons-material';
import ChatWindow from '../components/Chat/ChatWindow';
import { useAuth } from '../contexts/AuthContext';

const ChatTestPage = () => {
  const { user } = useAuth();
  const [chatOpen, setChatOpen] = useState(false);
  const [chatMinimized, setChatMinimized] = useState(false);

  const sampleQuestions = [
    "T√¥i c·∫ßn laptop gaming gi√° kho·∫£ng 20 tri·ªáu",
    "Laptop n√†o t·ªët cho sinh vi√™n?",
    "So s√°nh laptop Dell v√† HP",
    "PC gaming c·∫•u h√¨nh cao nh·∫•t",
    "Laptop vƒÉn ph√≤ng pin tr√¢u",
    "M√°y t√≠nh cho ƒë·ªì h·ªça 3D"
  ];

  const features = [
    {
      icon: <AIIcon color="primary" />,
      title: "RAG Technology",
      description: "S·ª≠ d·ª•ng Retrieval-Augmented Generation ƒë·ªÉ t√¨m ki·∫øm th√¥ng tin s·∫£n ph·∫©m ch√≠nh x√°c"
    },
    {
      icon: <SearchIcon color="primary" />,
      title: "Smart Search",
      description: "T√¨m ki·∫øm th√¥ng minh d·ª±a tr√™n ng·ªØ c·∫£nh v√† t·ª´ kh√≥a ti·∫øng Vi·ªát"
    },
    {
      icon: <RecommendIcon color="primary" />,
      title: "Product Recommendations",
      description: "ƒê·ªÅ xu·∫•t s·∫£n ph·∫©m ph√π h·ª£p d·ª±a tr√™n nhu c·∫ßu v√† ng√¢n s√°ch"
    },
    {
      icon: <ChatIcon color="primary" />,
      title: "Natural Conversation",
      description: "Tr√≤ chuy·ªán t·ª± nhi√™n b·∫±ng ti·∫øng Vi·ªát v·ªõi AI assistant"
    }
  ];

  const handleOpenChat = () => {
    setChatOpen(true);
    setChatMinimized(false);
  };

  const handleCloseChat = () => {
    setChatOpen(false);
    setChatMinimized(false);
  };

  const handleMinimizeChat = () => {
    setChatMinimized(!chatMinimized);
  };

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      <Box sx={{ mb: 4, textAlign: 'center' }}>
        <Typography variant="h3" gutterBottom>
          ü§ñ AI Chatbot RAG System
        </Typography>
        <Typography variant="h6" color="text.secondary" gutterBottom>
          H·ªá th·ªëng chatbot AI v·ªõi c√¥ng ngh·ªá RAG cho t∆∞ v·∫•n laptop v√† PC
        </Typography>
        <Typography variant="body1" color="text.secondary">
          Powered by LangChain + OpenAI GPT-3.5 + Product Knowledge Base
        </Typography>
      </Box>

      {!user && (
        <Alert severity="info" sx={{ mb: 3 }}>
          üí° ƒêƒÉng nh·∫≠p ƒë·ªÉ tr·∫£i nghi·ªám t√≠nh nƒÉng c√° nh√¢n h√≥a t·ªët h∆°n
        </Alert>
      )}

      {/* Features Grid */}
      <Grid container spacing={3} sx={{ mb: 4 }}>
        {features.map((feature, index) => (
          <Grid item xs={12} sm={6} md={3} key={index}>
            <Card sx={{ height: '100%', textAlign: 'center' }}>
              <CardContent>
                <Box sx={{ mb: 2 }}>
                  {feature.icon}
                </Box>
                <Typography variant="h6" gutterBottom>
                  {feature.title}
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  {feature.description}
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      <Grid container spacing={3}>
        {/* Demo Section */}
        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 3 }}>
            <Typography variant="h5" gutterBottom>
              üöÄ Demo Chatbot
            </Typography>
            <Typography variant="body1" color="text.secondary" sx={{ mb: 3 }}>
              Nh·∫•n n√∫t b√™n d∆∞·ªõi ƒë·ªÉ m·ªü chat v√† tr·∫£i nghi·ªám AI assistant
            </Typography>
            
            <Button
              variant="contained"
              size="large"
              startIcon={<BotIcon />}
              onClick={handleOpenChat}
              fullWidth
              sx={{ mb: 2 }}
            >
              M·ªü AI Chat Assistant
            </Button>

            <Alert severity="success">
              ‚úÖ Chat system ƒë√£ s·∫µn s√†ng! H√£y th·ª≠ h·ªèi v·ªÅ laptop ho·∫∑c PC b·∫°n c·∫ßn.
            </Alert>
          </Paper>
        </Grid>

        {/* Sample Questions */}
        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 3 }}>
            <Typography variant="h5" gutterBottom>
              üí¨ C√¢u h·ªèi m·∫´u
            </Typography>
            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              Th·ª≠ h·ªèi nh·ªØng c√¢u h·ªèi n√†y ƒë·ªÉ test kh·∫£ nƒÉng c·ªßa AI:
            </Typography>
            
            <List>
              {sampleQuestions.map((question, index) => (
                <React.Fragment key={index}>
                  <ListItem>
                    <ListItemIcon>
                      <ChatIcon color="primary" fontSize="small" />
                    </ListItemIcon>
                    <ListItemText 
                      primary={question}
                      primaryTypographyProps={{ variant: 'body2' }}
                    />
                  </ListItem>
                  {index < sampleQuestions.length - 1 && <Divider />}
                </React.Fragment>
              ))}
            </List>
          </Paper>
        </Grid>
      </Grid>

      {/* Technical Info */}
      <Paper sx={{ p: 3, mt: 3, bgcolor: 'grey.50' }}>
        <Typography variant="h6" gutterBottom>
          üîß Th√¥ng tin k·ªπ thu·∫≠t
        </Typography>
        <Grid container spacing={2}>
          <Grid item xs={12} sm={6} md={3}>
            <Typography variant="subtitle2" color="primary">
              Backend
            </Typography>
            <Typography variant="body2">
              Node.js + Express<br/>
              LangChain Framework<br/>
              OpenAI GPT-3.5 Turbo
            </Typography>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Typography variant="subtitle2" color="primary">
              Database
            </Typography>
            <Typography variant="body2">
              MongoDB<br/>
              Product Knowledge Base<br/>
              Chat Session Storage
            </Typography>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Typography variant="subtitle2" color="primary">
              Frontend
            </Typography>
            <Typography variant="body2">
              React.js<br/>
              Material-UI<br/>
              Real-time Chat UI
            </Typography>
          </Grid>
          <Grid item xs={12} sm={6} md={3}>
            <Typography variant="subtitle2" color="primary">
              Features
            </Typography>
            <Typography variant="body2">
              RAG Pipeline<br/>
              Vietnamese Support<br/>
              Product Recommendations
            </Typography>
          </Grid>
        </Grid>
      </Paper>

      {/* Chat Window */}
      <ChatWindow
        open={chatOpen}
        onClose={handleCloseChat}
        minimized={chatMinimized}
        onMinimize={handleMinimizeChat}
      />
    </Container>
  );
};

export default ChatTestPage;